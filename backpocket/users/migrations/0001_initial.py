# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-23 19:42
from __future__ import unicode_literals

import backpocket.users.models
import backpocket.utils
import django.contrib.auth.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='user ID')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 32 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=32, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator], verbose_name='username')),
                ('name', models.CharField(blank=True, max_length=150, verbose_name='display name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=backpocket.utils.utcnow, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'bp_user',
                'permissions': (('view_user', 'Can view user'), ('view_admin', 'Can view admin interface'), ('set_user_admin', 'Can set user as admin'), ('set_user_active', 'Can activate/deactivate user'), ('set_user_password', 'Can set user password'), ('reset_user_password', 'Can reset user password'), ('change_user_groups', 'Can change user groups')),
                'default_related_name': 'users',
            },
            managers=[
                ('objects', backpocket.users.models.UserManager()),
            ],
        ),
    ]
